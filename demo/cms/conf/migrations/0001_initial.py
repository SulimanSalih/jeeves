# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-02-20 21:33
from __future__ import unicode_literals

from django.db import migrations, models
import jeevesdb.JeevesModel


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('contents', models.TextField()),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('accepted', models.BooleanField()),
            ],
            options={
                'db_table': 'papers',
            },
        ),
        migrations.CreateModel(
            name='PaperCoauthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('author', models.CharField(max_length=1024)),
                ('paper', jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.Paper')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaperPCConflict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('paper', jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.Paper')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaperVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('title', models.CharField(max_length=1024)),
                ('contents', models.FileField(upload_to='papers')),
                ('abstract', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('paper', jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.Paper')),
            ],
            options={
                'db_table': 'paper_versions',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('contents', models.TextField()),
                ('score_novelty', models.IntegerField()),
                ('score_presentation', models.IntegerField()),
                ('score_technical', models.IntegerField()),
                ('score_confidence', models.IntegerField()),
                ('paper', jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.Paper')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='ReviewAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('assign_type', models.CharField(choices=[('none', 'none'), ('assigned', 'assigned'), ('conflict', 'conflict')], max_length=8, null=True)),
                ('paper', jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.Paper')),
            ],
            options={
                'db_table': 'review_assignments',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('name', models.CharField(max_length=32)),
                ('paper', jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.Paper')),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='UserPCConflict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeeves_id', models.CharField(max_length=32)),
                ('jeeves_vars', models.CharField(max_length=1024)),
                ('username', models.CharField(max_length=1024)),
                ('email', models.CharField(max_length=1024)),
                ('name', models.CharField(max_length=1024)),
                ('affiliation', models.CharField(max_length=1024)),
                ('acm_number', models.CharField(max_length=1024)),
                ('level', models.CharField(choices=[('normal', 'normal'), ('pc', 'pc'), ('chair', 'chair')], max_length=12)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.AddField(
            model_name='userpcconflict',
            name='pc',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, related_name='userpcconflict_pc', to='conf.UserProfile'),
        ),
        migrations.AddField(
            model_name='userpcconflict',
            name='user',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, related_name='userpcconflict_user', to='conf.UserProfile'),
        ),
        migrations.AddField(
            model_name='reviewassignment',
            name='user',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.UserProfile'),
        ),
        migrations.AddField(
            model_name='review',
            name='reviewer',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.UserProfile'),
        ),
        migrations.AddField(
            model_name='paperpcconflict',
            name='pc',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.UserProfile'),
        ),
        migrations.AddField(
            model_name='paper',
            name='author',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='paper',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.Paper'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=jeevesdb.JeevesModel.JeevesForeignKey(null=True, to='conf.UserProfile'),
        ),
    ]
